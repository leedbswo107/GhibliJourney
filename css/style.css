@charset 'utf-8';
@import url('https://fonts.googleapis.com/css2?family=Nanum+Pen+Script&family=Noto+Sans+KR:wght@100..900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');
:root {
  --lightOrange: #ffcc80;
  --woodBrown: #836953;
  --beige: #eed9c4;
  --gray: #939396;
  --footBrown: #4b382a;
  --size: 16px;
  font-size: var(--size);
  font-family: 'Roboto', sans-serif;
  min-width: 390px;
}
body > div {
  display: flex;
  background-color: var(--beige);
  overflow: hidden;
}
body.on {
  overflow: hidden;
}
.wrap {
  overflow: hidden;
}
.hd {
  display: flex;
  position: fixed;
  width: 100px;
  height: 100vh;
  flex-direction: column;
  background-color: var(--woodBrown);
  z-index: 100;
}
.hd h1 {
  display: flex;
  justify-content: center;
  padding: calc(var(--size) * 2) 0;
}
.hd img {
  width: 30%;
  cursor: pointer;
}
.hd .tools {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: calc(var(--size) * 1.5);
  gap: calc(var(--size) * 2) 0;
  color: var(--beige);
}
.hd .tools > * {
  cursor: pointer;
  transition: 0.3s;
}
.hd .tools > *:hover,
.hd .tools > *:focus {
  color: var(--lightOrange);
}
.hd .searchBack {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backdrop-filter: blur(5px);
  visibility: hidden;
  z-index: -1;
}
.hd .searchInput {
  position: absolute;
  display: flex;
  align-items: center;
  padding: calc(var(--size) / 2);
  top: 20%;
  left: 50%;
  transform: translateX(-50%);
  background-color: var(--beige);
  border: 3px solid var(--woodBrown);
  border-radius: calc(var(--size) * 3);
  overflow: hidden;
  opacity: 0.8;
}
.hd .searchBack.on {
  visibility: visible;
  z-index: 9999;
}
.searchBack .close {
  position: absolute;
  top: 30%;
  right: 50%;
  width: calc(var(--size) * 2);
  height: calc(var(--size) * 2);
  display: flex;
  transform: translate(-50% -50%);
  justify-content: center;
  align-items: center;
  cursor: pointer;
  background-color: black;
  border-radius: 50%;
  transition-property: background-color;
  transition-timing-function: linear;
  transition-duration: 0.3s;
  z-index: 99;
}
.searchBack .close:hover {
  background-color: white;
}
.searchBack .close:hover > span {
  background-color: black;
}
.searchBack .close span {
  position: absolute;
  height: 3px;
  width: calc(var(--size) * 1.5);
  border-radius: 4px;
  background-color: white;
  transform-origin: center;
  transition-property: background-color;
  transition-timing-function: linear;
  transition-duration: 0.3s;
}
.searchBack .close span:nth-of-type(1) {
  transform: rotate(45deg);
}
.searchBack .close span:nth-of-type(2) {
  transform: rotate(-45deg);
}
.hd .searchInput .searchTitle {
  font-size: calc(var(--size) * 2);
  padding: calc(var(--size) * 0.5) calc(var(--size));
  background-color: var(--beige);
  color: var(--woodBrown);
  opacity: 0.8;
  outline: none;
  border: none;
}
.hd .searchInput .submit {
  display: inline-block;
  cursor: pointer;
  height: 100%;
  border: none;
  background-color: transparent;
  font-size: calc(var(--size) * 1.5);
  padding: var(--size) calc(var(--size) * 0.5);
  color: var(--woodBrown);
  transition-property: color;
  transition-duration: 0.3s;
  transition-timing-function: linear;
}
.hd .searchInput .submit:hover {
  color: var(--lightOrange);
}
.loadingBack {
  display: flex;
  position: fixed;
  width: 100%;
  left: 0;
  height: 100vh;
  backdrop-filter: blur(5px);
  background-color: black;
  justify-content: center;
  transform-origin: center;
  transform: scale(1);
  align-items: center;
  z-index: 100;
  opacity: 1;
  transition: 3s;
}
.loadingBack.off {
  z-index: -1;
  opacity: 0;
  visibility: hidden;
}
.loadingBack.off .load {
  transform: scale(0);
}
.loadingBack .load {
  min-width: 250px;
  border-radius: calc(var(--size) * 8);
  transform: scale(1);
  overflow: hidden;
  position: absolute;
  transition: 0.3s;
  width: 30%;
}
.loadingBack .load img {
  width: 100%;
  height: 100%;
}
.vertical {
  width: calc(100% - 100px);
  margin-left: 100px;
}
.banner {
  width: 100%;
}
.banner .slideWrap {
  position: relative;
}
.banner .slider li {
  overflow: hidden;
}
.banner .slider {
  overflow: hidden;
  top: 0;
}
.banner .card {
  width: 100%;
  padding-top: 40%;
  position: relative;
}
.banner .card > * {
  position: absolute;
}
.banner .card img {
  width: 100%;
  top: 0;
  left: 0;
}
.banner .info {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width: 50%;
  height: 100%;
  top: 0;
  left: -100px;
  z-index: 5;
  padding: calc(var(--size) * 4) 0 0 calc(var(--size) * 2);
  color: white;
  background: rgb(0, 0, 0);
  background: linear-gradient(
    90deg,
    rgba(0, 0, 0, 1) 0%,
    rgba(0, 0, 0, 0.7) 50%,
    rgba(0, 0, 0, 0) 100%
  );
  transform: skew(-15deg);
}
.banner .gradient {
  position: absolute;
  z-index: 5;
  bottom: 0;
  width: 100%;
  height: 10%;
  background: rgb(238, 217, 196);
  background: linear-gradient(
    0deg,
    rgba(238, 217, 196, 1) 0%,
    rgba(238, 217, 196, 0.5) 25%,
    rgba(238, 217, 196, 0.3) 50%,
    rgba(238, 217, 196, 0.1) 75%,
    rgba(238, 217, 196, 0) 100%
  );
}
.banner .info .infoIn {
  display: flex;
  gap: calc(var(--size) * 2) 0;
  flex-direction: column;
  transform: translateX(100px) skew(15deg);
}
.banner .info strong {
  font-size: calc(var(--size) * 4);
  width: 100%;
  transition: 0.3s;
}
.listOfWorks {
  position: relative;
}
.animationArea {
  width: 100%;
  background-size: contain;
  position: absolute;
  bottom: 0;
  z-index: 5;
  background: rgb(0, 0, 0);
  background: linear-gradient(
    180deg,
    rgba(0, 0, 0, 0) 10%,
    rgba(0, 0, 0, 0.25) 25%,
    rgba(0, 0, 0, 0.5) 50%,
    rgba(0, 0, 0, 0.75) 75%,
    rgba(0, 0, 0, 1) 100%
  );
  overflow: hidden;
}
.totoro,
.catBus {
  position: relative;
  display: inline-block;
  top: 0px;
  left: 100%;
  height: 100px;
  background-size: cover;
  background-position: center;
}
.totoro {
  width: 100px;
  background-image: url('../img/movingTotoro.gif');
  animation: totoroMoving 50s linear infinite;
}
.catBus {
  width: 250px;
  background-image: url('../img/catBus.gif');
  animation: catBusMoving 50s linear 25s infinite;
}
.category {
  width: 100%;
  position: absolute;
  display: flex;
  top: 50%;
  transform: translateY(-50%);
  justify-content: end;
  padding-right: calc(var(--size) * 2);
}
.category label {
  display: flex;
  width: 100%;
  border: 1px solid var(--woodBrown);
  width: fit-content;
  height: calc(var(--size) * 2);
  border-radius: var(--size);
  line-height: 1;
  /* position: absolute; */
  padding: 0 calc(var(--size));
  align-items: center;
  right: calc(var(--size) * 2);
  z-index: 1;
  background-color: var(--beige);
}
#dirSelect {
  position: relative;
  background-color: var(--beige);
  border: none;
  outline: none;
  padding-left: var(--size);
}
.category .selectCon {
  display: inline-block;
  position: relative;
}
.category .selectCon::before {
  content: '';
  display: inline-block;
  position: absolute;
  left: calc(var(--size) / 2);
  top: 50%;
  transform: translateY(-50%);
  width: 1px;
  height: calc(var(--size) * 2);
  background-color: var(--woodBrown);
  z-index: 1;
}
.listOfWorks .works {
  padding: var(--size);
  justify-content: center;
  display: grid;
  grid-template-columns: repeat(
    auto-fit,
    minmax(calc(var(--size) * 17), 0.25fr)
  );
  position: relative;
  grid-auto-rows: auto-fit;
  gap: var(--size);
}
.works .work {
  border-radius: var(--size);
  overflow: hidden;
  transition: 0.3s;
  position: relative;
  cursor: pointer;
}
.works .work:focus img,
.works .work:hover img {
  transform: scale(1.05);
}
.works .work > img {
  width: 100%;
  height: 100%;
  transition: 0.3s;
}
.modalBack {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  padding: 0 20%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  backdrop-filter: blur(0);
  z-index: -1;
}
.modalBack.on {
  backdrop-filter: blur(3px);
  z-index: 101;
}
.listOfWorks .modal {
  position: relative;
  width: 100%;
  height: calc(100% * 0.7);
  background-color: white;
  border-radius: calc(var(--size) * 2);
  overflow: hidden;
  overflow-y: scroll;
}
.listOfWorks .modal::-webkit-scrollbar {
  display: none;
}
.modal .modalBanner > img {
  width: 100%;
}
.modal .modalBanner .gradient {
  position: absolute;
  width: 100%;
  height: calc(var(--size) * 5);
  background: rgb(255, 148, 42);
  background: linear-gradient(
    180deg,
    rgba(0, 0, 0, 1) 0%,
    rgba(0, 0, 0, 0.75) 25%,
    rgba(0, 0, 0, 0.2) 75%,
    rgba(0, 0, 0, 0) 100%
  );
}
.modal .modalPoster {
  display: block;
  width: 25%;
  position: absolute;
  right: calc(var(--size) * 2);
  transform: translateY(-90%);
  border-radius: var(--size);
  overflow: hidden;
  z-index: 5;
}
.modal .modalPoster > img {
  width: 100%;
  height: 100%;
}
.modal .detail {
  display: flex;
  border-radius: calc(var(--size) * 2);
  transform: translateY(calc(var(--size) * -6));
  background-color: white;
  padding: calc(var(--size) * 2);
  flex-direction: column;
  color: var(--gray);
}
.modal .detail strong {
  font-size: calc(var(--size) * 3);
  color: black;
  width: 65%;
  padding-bottom: var(--size);
}
.modal .detail span {
  padding-bottom: var(--size);
}
.modal .modalBottomImg {
  position: relative;
  padding-bottom: calc(var(--size) * 2);
  width: 30%;
  left: 50%;
  transform: translateX(-50%);
}
.modal .modalBottomImg img {
  width: 100%;
}
.modalBack .close {
  position: relative;
  width: calc(var(--size) * 2);
  height: calc(var(--size) * 2);
  top: calc(var(--size) * 3);
  left: calc(100% - var(--size) * 3);
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  background-color: black;
  border-radius: 50%;
  transition: 0.3s;
  z-index: 999;
}
.listOfWorks .close:hover {
  background-color: white;
}
.listOfWorks .close:hover > span {
  background-color: black;
}
.listOfWorks .close span {
  position: absolute;
  height: 3px;
  width: calc(var(--size) * 1.5);
  transform-origin: center;
  background-color: white;
  border-radius: 4px;
  transition: 0.3s;
}
.listOfWorks .close span:nth-of-type(1) {
  transform: rotate(45deg);
}
.listOfWorks .close span:nth-of-type(2) {
  transform: rotate(-45deg);
}
.works .rtScore {
  position: absolute;
  padding: 0 var(--size);
  justify-content: space-between;
  display: flex;
  gap: var(--size);
  align-items: center;
  width: 100%;
  height: 20%;
  top: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  color: white;
  transition: 0.3s;
}
.works .work:focus .rtScore,
.works .work:hover .rtScore {
  transform: translateY(-100%);
}
.works .rtScore span {
  display: flex;
  gap: calc(var(--size) / 2);
  align-items: center;
  font-weight: bold;
  height: 50%;
}
.works .rtScore span > img {
  height: 70%;
}
.foot {
  background-color: var(--footBrown);
  padding: calc(var(--size) * 6) calc(var(--size) * 3) calc(var(--size) * 3)
    calc(var(--size) * 3);
  height: 400px;
  width: 100%;
  position: relative;
  align-items: center;
}
.foot .contact {
  display: flex;
  flex-direction: column;
  width: 50%;
  gap: calc(var(--size) * 2);
  color: var(--gray);
}
.foot .contact strong {
  font-weight: bold;
  font-size: calc(var(--size) * 3);
}
.foot .contact p {
  line-height: 1.5;
}
.foot .contact input {
  color: var(--gray);
}
.foot .contact .emailInput {
  padding: calc(var(--size) * 0.5) var(--size) calc(var(--size) * 0.5) 0;
  background-color: transparent;
  border: none;
  border-bottom: 2px solid var(--gray);
  outline: none;
}

.foot .contact .emailSubmit {
  padding: calc(var(--size) * 0.5) var(--size);
  background-color: transparent;
  border: 1px solid var(--gray);
  border-radius: var(--size);
  transition: 0.3s;
}
.foot .contact .emailSubmit:hover {
  background-color: var(--gray);
  color: var(--footBrown);
}
.ftLogo {
  right: calc(var(--size) * 4);
  top: 50%;
  position: absolute;
  transform: translateY(-50%);
  width: 30%;
  padding: var(--size);
}
.ftLogo img {
  width: 100%;
}

@media (max-width: 1100px) {
  .banner .info strong {
    font-size: calc(var(--size) * 3);
  }
}
@media (max-width: 815px) {
  .banner .info {
    width: 60%;
  }
  .banner .info strong {
    font-size: calc(var(--size) * 2);
  }
  .banner .info span {
    display: none;
  }
  .listOfWorks .works {
    grid-template-columns: repeat(
      auto-fit,
      minmax(calc(var(--size) * 12), 1fr)
    );
  }
  .foot {
    padding: calc(var(--size) * 3) var(--size);
  }
  .foot .contact {
    width: 100%;
  }
  .foot .contact strong {
    font-size: calc(var(--size) * 2);
  }

  .ftLogo {
    right: 50%;
    transform: translateX(50%);
    top: 70%;
  }
}
@media (max-width: 550px) {
  .hd {
    width: 100%;
    height: 6vh;
    bottom: 0;
    flex-direction: row;
  }
  .hd h1 {
    width: calc(var(--size) * 2);
    position: fixed;
    padding: 0;
    left: var(--size);
    top: var(--size);
  }
  .hd h1 img {
    width: 100%;
  }
  .hd .tools {
    width: 100%;
    flex-direction: row;
    justify-content: space-evenly;
  }
  .hd .searchBack .searchInput {
    width: calc(100% - 10%);
  }
  .hd .searchBack .searchTitle {
    width: 100%;
    font-size: var(--size);
    padding: calc(var(--size) * 0.5) calc(var(--size) * 0.75);
  }
  .hd .searchInput .submit {
    padding: calc(var(--size) * 0.5);
  }
  .vertical {
    width: calc(100%);
    margin-left: 0;
  }
  .loadingBack {
    width: calc(100%);
  }
  .info {
    visibility: hidden;
  }
  .listOfWorks .works {
    grid-template-columns: repeat(
      auto-fit,
      minmax(calc(var(--size) * 10), 0.5fr)
    );
    gap: calc(var(--size) / 2);
  }
  .modalBack {
    padding: 0 10%;
  }
  .foot {
    padding: calc(var(--size) * 3) var(--size);
  }
  .foot .contact {
    width: 100%;
  }
  .foot .contact strong {
    font-size: calc(var(--size) * 2);
  }
  .ftLogo {
    right: 50%;
    transform: translateX(50%);
    top: 70%;
  }
}
@media (max-width: 425px) {
  .rtScore strong {
    font-size: calc(var(--size) * 0.8);
  }
  .modal .detail strong {
    font-size: calc(var(--size) * 2);
  }
  .animationArea {
    height: 50px;
  }
  .totoro,
  .catBus {
    display: none;
  }
  .category {
    opacity: 0.7;
  }
}
@keyframes totoroMoving {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(calc(-100vw - 100px));
  }
}
@keyframes catBusMoving {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(calc(-100vw - 250px));
  }
}
